name: CI

on:
  push:
  pull_request:

jobs:
  build-opencv:
    name: Build OpenCV

    strategy:
      matrix:
        os: [ubuntu, macos, windows]

    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Get latest release
        id: latest-release
        shell: bash
        env:
          MATRIX_OS: ${{ matrix.os }}
        run: |
          curl -s https://api.github.com/repos/opencv/opencv/releases/latest \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            | jq -r '.tag_name' | tee latest-release.txt
          echo "tag=$(cat latest-release.txt)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          repository: opencv/opencv
          ref: ${{ steps.latest-release.outputs.tag }}

      - name: CMake build
        shell: bash
        run: |
          mkdir build
          cd build

          cmake .. \
            -DCMAKE_INSTALL_PREFIX=../opencv \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_LIST=core,imgproc,highgui,features2d \
            -DBUILD_SHARED_LIBS=OFF \
            -DWITH_ADE=OFF \
            -DWITH_PROTOBUF=OFF \
            -DWITH_QUIRC=OFF \
            -DWITH_ITT=OFF \
            -DWITH_OPENEXR=OFF 

          cmake --build . --target install --parallel 4

      - uses: actions/upload-artifact@v3
        with:
          name: opencv-${{ matrix.os }}
          path: ./opencv

  build:
    name: Build Wheel
    needs: [build-opencv]

    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        python: ["3.8", "3.9", "3.10", "3.11"]

    runs-on: ${{ matrix.os }}-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: opencv-${{ matrix.os }}
          path: ./opencv

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          pip install build

      - name: Build wheel
        shell: bash
        run: |
          export OpenCV_DIR=$(pwd)/opencv/lib/cmake/opencv4
          export OpenCV_STATIC=ON

          python -m build --wheel

      - uses: actions/upload-artifact@v3
        with:
          name: wheel-${{matrix.os}}-${{matrix.python}}
          path: ./dist/*.whl
